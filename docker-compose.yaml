version: '3.1'

networks:
  lared:
    driver: bridge

services:
################################PETICION 1, REGISTRO DE USUARIO#####################################
  members_producer:
    container_name: members_producer
    build: ./servidor/Miembros/producer
    restart: always
    depends_on:
      - members_consumer
    
    networks:
       - lared
    ports:
      - "3000:3000"
        
  members_consumer:
    container_name: members_consumer
    build: ./servidor/Miembros/consumer
    networks:
      - lared

    ports:
      - "8000:8000"
################################PETICION 2, REGISTRO DE VENTA#####################################
  sale_producer:
    container_name: sale_producer
    build: ./servidor/Ventas/producer
    networks:
      - lared
    depends_on:
       - sales_consumer
    ports:
      - "3001:3000"

  sales_consumer:
    container_name: sales_consumer
    build: ./servidor/Ventas/consumer
    networks:
      - lared
    ports:
      - "8001:8000"

##################################PETICION 3, AVISO DE PERDIDO#####################################
  perdido_producer:
    container_name: perdido_producer
    build: ./servidor/Perdido/producer
    networks:
      - lared
    depends_on:
      - perdido_consumer
    ports:
      - "3002:3000"

  perdido_consumer:
    container_name: perdido_consumer
    build: ./servidor/Perdido/consumer
    networks:
      - lared
    ports:
      - "8002:8000"

#################################PROCESAMIENTO 1, VENTAS DIARIAS##########################################
  daily_sales_producer:
    container_name: daily_sales_producer
    build: ./servidor/Ventas/producer
    networks:
      - lared
    depends_on:
      - daily_sales_consumer
    ports:
      - "3003:3000"

  daily_sales_consumer:
    container_name: daily_sales_consumer
    build: ./servidor/Ventas/consumer
    networks:
      - lared
    ports:
      - "8003:8000"

##################################PROCESAMIENTO 2, STOCK DE REPOSICION##################################### 
  stock_producer:
    container_name: stock_producer
    build: ./servidor/Stock/producer
    networks:
      - lared
    depends_on:
      - stock_consumer
    ports:
      - "3004:3000"

  stock_consumer:
    container_name: stock_consumer
    build: ./servidor/Stock/consumer
    networks:
      - lared
    ports:
      - "8004:8000"

##################################PROCESAMIENTO 3, UBICACION#####################################
  ubicacion_producer:
    container_name: ubicacion_producer
    build: ./servidor/Ubicacion/producer
    networks:
      - lared
    depends_on:
      - ubicacion_consumer
    ports:
      - "3005:3000"

  ubicacion_consumer:
    container_name: ubicacion_consumer
    build: ./servidor/Ubicacion/consumer
    networks:
      - lared
    ports:
      - "8005:8000"

##################################ZOOKEPER Y KAFKA#####################################
  zookeeper:
    container_name: elzookeeper
    image: 'bitnami/zookeeper:latest'
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
    networks:
      - lared
    ports:
      - 2181:2181
      - 2888:2888
      - 3888:3888
    
  kafka:
    container_name: elkafka
    image: 'bitnami/kafka:latest'
    networks:
     - lared
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"   
      KAFKA_ADVERTISED_PORT: "9092"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
    ports:
      - 9092:9092
